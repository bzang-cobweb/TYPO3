# BY DEFAULT, WE PROTECT THE ACCESS TO HTACCESS FILE
<Files .htaccess>
    Order Allow,Deny
    Deny from all
</Files>



# ------------------------------------START---------------------------------------------------

# This directive allows you to write a line in footer page
ServerSignature Off
 
# against clickjacking
Header always append X-Frame-Options SAMEORIGIN
 
# against some types of drive-by-downloads
Header set X-Content-Type-Options nosniff

# Avoid git folders to be reached from the web
# http://stackoverflow.com/questions/6142437/make-git-directory-web-inaccessible
RedirectMatch 404 /\.git

# -------------------------------------END--------------------------------------------------



# -------------------------------------START-------------------------------------------------
# Enable URL rewriting
RewriteEngine On

# Store the current location in an environment variable CWD to use
# mod_rewrite in .htaccess files without knowing the RewriteBase
RewriteCond $0#%{REQUEST_URI} ([^#]*)#(.*)\1$
RewriteRule ^.*$ - [E=CWD:%2]

# Disallow autodiscover.xml
RewriteCond %{REQUEST_URI} autodiscover/autodiscover.xml [NC]
RewriteRule ^ - [F,L]

# Do not rewrite static resources (used by Infomaniak)
RewriteCond %{REQUEST_URI} fpm-status
RewriteRule .* - [L,DPI]

# ------------------------------------------------------------------------------------------
# Desc    : Redirect all trafic to HTTPS START
# ------------------------------------------------------------------------------------------

RewriteCond %{HTTPS} off
RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# -----------------------------------------END----------------------------------------------



# ------------------------------------------------------------------------------------------
# Desc : Forces www in front of every domain name, except zang
# ------------------------------------------------------------------------------------------

RewriteCond %{HTTP_HOST} !^$
RewriteCond %{HTTP_HOST} !^www\. [NC]
RewriteCond %{HTTP_HOST} !zang [NC]
RewriteCond %{HTTPS}s ^on(s)|
RewriteRule ^ http%1://www.%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# -------------------------------------END--------------------------------------------------



# ------------------------------------------------------------------------------------------
# Desc : Authorization required START
# ------------------------------------------------------------------------------------------

# Is this a restricted host
#SetEnvIfNoCase Host (zang(?!.me)) RESTRICTED_HOST

# Block access to TYPO3 BE if not in restricted host
#RewriteCond %{HTTP_HOST} !zang
#RewriteCond %{REQUEST_URI} ^/typo3/
#RewriteCond %{REQUEST_FILENAME} !^.*.js
#RewriteCond %{REQUEST_FILENAME} !^.*.css
#RewriteRule  $ /accessDenied.html [QSA,L,R=301]

# robots.txt configuration
#RewriteCond %{ENV:RESTRICTED_HOST} "=1"
RewriteCond  %{REQUEST_URI} ^/robots.txt
RewriteRule  $ /robots-restricted.txt [L]

# -------------------------------------END--------------------------------------------------



# ------------------------------------------------------------------------------------------
# ACCESS CONTROL START

# User authentication
#AuthType Basic
#AuthName "Restricted Access"
#AuthUserFile /home/mdlm/.htpasswd
#Require valid-user

# First, all Deny directives are evaluated;
# if at least one of them matches, the request is rejected, unless it also matches an Allow directive.
# Any request that does not correspond to any Allow or Deny directive is allowed.
# See https://httpd.apache.org/docs/2.4/mod/mod_access_compat.html#order
#Order Deny,Allow

# Deny access to all restricted host
#Deny from env=RESTRICTED_HOST

#Allow from 127.0.0.1
#Allow from ::1
#Satisfy Any

# -----------------------------------------END----------------------------------------------



# ------------------------------------------------------------------------------------------
# Desc : Headers configuration START
# ------------------------------------------------------------------------------------------

<IfModule mod_expires.c>
  ExpiresActive on

  # Perhaps better to whitelist expires rules? Perhaps.
  ExpiresDefault                                "access plus 1 month"

  # cache.appcache needs re-requests in FF 3.6 (thx Remy ~Introducing HTML5)
  ExpiresByType text/cache-manifest             "access plus 0 seconds"

  # Your document html
  ExpiresByType text/html                       "access plus 0 seconds"

  # Data
  ExpiresByType text/xml                        "access plus 0 seconds"
  ExpiresByType application/xml                 "access plus 0 seconds"
  ExpiresByType application/json                "access plus 0 seconds"

  # RSS feed
  ExpiresByType application/rss+xml             "access plus 1 hour"

  # Favicon (cannot be renamed)
  ExpiresByType image/x-icon                    "access plus 1 week"

  # Media: images, video, audio
  ExpiresByType image/gif                       "access plus 1 month"
  ExpiresByType image/png                       "access plus 1 month"
  ExpiresByType image/jpg                       "access plus 1 month"
  ExpiresByType image/jpeg                      "access plus 1 month"
  ExpiresByType image/svg+xml                   "access plus 1 month"

  ExpiresByType audio/x-wav                     "access plus 1 month"
  ExpiresByType audio/ogg                       "access plus 1 month"
  ExpiresByType audio/mpeg                      "access plus 1 month"

  ExpiresByType video/ogg                       "access plus 1 month"
  ExpiresByType video/mp4                       "access plus 1 month"
  ExpiresByType video/webm                      "access plus 1 month"
  ExpiresByType video/mpeg                      "access plus 1 month"
  ExpiresByType video/mp4                       "access plus 1 month"
  ExpiresByType video/quicktime                 "access plus 1 month"
  ExpiresByType video/x-ms-wmv                  "access plus 1 month"

  # HTC files  (css3pie)
  ExpiresByType text/x-component                "access plus 1 month"

  # Webfonts
  ExpiresByType font/truetype                   "access plus 1 month"
  ExpiresByType font/opentype                   "access plus 1 month"
  ExpiresByType application/x-font-woff         "access plus 1 month"
  ExpiresByType application/vnd.ms-fontobject   "access plus 1 month"

  # CSS and JavaScript
  ExpiresByType text/css                        "access plus 1 year"
  ExpiresByType application/javascript          "access plus 1 year"
  ExpiresByType text/javascript                 "access plus 1 year"
  ExpiresByType application/x-shockwave-flash   "access plus 1 year"

  <IfModule mod_headers.c>
    Header append Cache-Control "public"
  </IfModule>

</IfModule>

########################################################
### SPECIAL HEADERS
########################################################
<IfModule mod_deflate.c>
    #The following line is enough for .js, .css and .svg
    AddOutputFilter DEFLATE js css svg

    # Force compression for mangled `Accept-Encoding` request headers
    <IfModule mod_setenvif.c>
        <IfModule mod_headers.c>
            SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
            RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
        </IfModule>
    </IfModule>

    # Compress all output labeled with one of the following media types.
    #
    # (!) For Apache versions below version 2.3.7 you don't need to
    # enable `mod_filter` and can remove the `<IfModule mod_filter.c>`
    # and `</IfModule>` lines as `AddOutputFilterByType` is still in
    # the core directives.
    #
    # https://httpd.apache.org/docs/current/mod/mod_filter.html#addoutputfilterbytype

    <IfModule mod_filter.c>
        AddOutputFilterByType DEFLATE application/atom+xml \
            application/javascript \
            application/json \
            application/ld+json \
            application/manifest+json \
            application/rdf+xml \
            application/rss+xml \
            application/schema+json \
            application/vnd.geo+json \
            application/vnd.ms-fontobject \
            application/x-font-ttf \
            application/x-javascript \
            application/x-web-app-manifest+json \
            application/xhtml+xml \
            application/xml \
            font/eot \
            font/opentype \
            image/bmp \
            image/svg+xml \
            image/vnd.microsoft.icon \
            image/x-icon \
            text/cache-manifest \
            text/css \
            text/html \
            text/javascript \
            text/plain \
            text/vcard \
            text/vnd.rim.location.xloc \
            text/vtt \
            text/x-component \
            text/x-cross-domain-policy \
            text/xml
    </IfModule>

    <IfModule mod_mime.c>
        AddEncoding gzip svgz
    </IfModule>

    #The following lines are to avoid bugs with some browsers
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
</IfModule>

<IfModule mod_headers.c>
  <FilesMatch "\.(js|css|xml|gz|gzip)$">
    Header append Vary Accept-Encoding
  </FilesMatch>
  Header always set Referrer-Policy "same-origin"
</IfModule>

AddDefaultCharset UTF-8

Options -MultiViews

# Make sure that directory listings are disabled.
<IfModule mod_autoindex.c>
    Options -Indexes
</IfModule>

<IfModule mod_headers.c>
    # Force IE to render pages in the highest available mode
    Header set X-UA-Compatible "IE=edge"
    <FilesMatch "\.(appcache|crx|css|eot|gif|htc|ico|jpe?g|js|m4a|m4v|manifest|mp4|oex|oga|ogg|ogv|otf|pdf|png|safariextz|svgz?|ttf|vcf|webapp|webm|webp|woff2?|xml|xpi)$">
        Header unset X-UA-Compatible
    </FilesMatch>

    # Reducing MIME type security risks
    Header set X-Content-Type-Options "nosniff"
</IfModule>

# ETag removal
<IfModule mod_headers.c>
    Header unset ETag
</IfModule>
FileETag None

# -----------------------------------END----------------------------------------------------



# ------------------------------------------------------------------------------------------
# Desc : TYPO3 Basics rules configuration START
# ------------------------------------------------------------------------------------------

############################################################################
SetEnvIf Host zang\.me TYPO3_CONTEXT=Development/local
SetEnvIf Host (\.local) TYPO3_CONTEXT=Development/local
SetEnvIf Host (!zang|!\.local) TYPO3_CONTEXT=Production
############################################################################

############################################################################
# Rule for versioned static files, configured through:
# - $TYPO3_CONF_VARS['BE']['versionNumberInFilename']
# - $TYPO3_CONF_VARS['FE']['versionNumberInFilename']
# IMPORTANT: This rule has to be the very first RewriteCond in order to work!
############################################################################
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.+)\.(\d+)\.(php|js|css|png|jpg|gif|gzip)$ $1.$3 [L]

############################################################################
# Block access to some folders
############################################################################
RewriteRule _(?:recycler|temp)_/ - [F]
RewriteRule fileadmin/templates/.*\.(?:txt|ts)$ - [F]
RewriteRule ^(?:vendor|typo3_src|typo3temp/var) - [F]
RewriteRule (?:typo3conf/ext|typo3/sysext|typo3/ext)/[^/]+/(?:Configuration|Resources/Private|Tests?|Documentation|docs?)/ - [F]

### Disallow access to any build.xml or build.properties file
############################################################################
RewriteCond %{REQUEST_URI} build\.(xml|properties)
RewriteRule (.*) /accessDenied.html [QSA,L,R=301]

############################################################################
### Disable php file in fileadmin/user_upload directory
############################################################################
RewriteCond  %{REQUEST_URI} /fileadmin/user_upload/
#RewriteCond  %{REQUEST_URI} !filename-allowed.php
RewriteRule  ^.*\.php[0-9]?$ /accessDenied.html [L,R=301]

############################################################################
# This shouldn't be rewritten
############################################################################
RewriteRule ^typo3$ - [L]
RewriteRule ^typo3/.*$ - [L]
RewriteRule ^uploads/.*$ - [L]
RewriteRule ^fileadmin/.*$ - [L]
RewriteRule ^typo3conf/.*$ - [L]
RewriteRule ^uploads/.*$ - [L]
RewriteRule ^maintenance_neutre\.html - [L]
RewriteRule ^accessDenied\.html - [L]
RewriteRule ^robots\.txt - [L]
RewriteRule ^robots-restricted\.txt - [L]

###############################################################################
### ZIP JS and CSS
###############################################################################
<FilesMatch "\.js\.gzip$">
    AddType "text/javascript" .gzip
</FilesMatch>
<FilesMatch "\.css\.gzip$">
    AddType "text/css" .gzip
</FilesMatch>
AddEncoding gzip .gzip

###############################################################################
### Disallow reading file type
###############################################################################
<Files ~ "\.(inc|class|sql|ini|conf|exe|dll|bin|tpl|bkp|dat|c|h|py|spd|theme|ts)$">
    deny from all
</Files>

# ---------------------------------------END------------------------------------------------



# ------------------------------------------------------------------------------------------
# Desc : Configuration for static file cache, corresponding to extension nc_staticfilecache
#        version 11.1.0 and above.
# Example found on https://github.com/lochmueller/staticfilecache/blob/master/Documentation/Configuration/Htaccess.rst
# ------------------------------------------------------------------------------------------

###############################################################################
### STATIC FILE CACHE RULESET #################################################
###############################################################################

 ### Begin: StaticFileCache (preparation) ####

# Document root configuration
RewriteRule .* - [E=SFC_ROOT:%{DOCUMENT_ROOT}]
# RewriteRule .* - [E=SFC_ROOT:%{DOCUMENT_ROOT}/t3site] # Example if your installation is installed in a directory
# NOTE: There are cases (apache versions and configuration) where DOCUMENT_ROOT do not exists. Please set the SFC_ROOT to the right directory without DOCUMENT_ROOT then!

# Cleanup URI
RewriteCond %{REQUEST_URI} ^.*$
RewriteRule .* - [E=SFC_URI:/%{REQUEST_URI}]
RewriteCond %{REQUEST_URI} ^/.*$
RewriteRule .* - [E=SFC_URI:%{REQUEST_URI}]
RewriteCond %{REQUEST_URI} ^/?$
RewriteRule .* - [E=SFC_URI:/]

# Cleanup HOST
RewriteCond %{HTTP_HOST} ^([^:]+)(:[0-9]+)?$
RewriteRule .* - [E=SFC_HOST:%1]

# Disable cache for EXT:solr indexing requests
RewriteCond %{HTTP:X-Tx-Solr-Iq} .+
RewriteRule .* - [E=SFC_HOST:invalid-host]

# Get scheme
RewriteRule .* - [E=SFC_PROTOCOL:http]
RewriteCond %{SERVER_PORT} ^443$ [OR]
RewriteCond %{HTTP:X-Forwarded-Proto} https
RewriteRule .* - [E=SFC_PROTOCOL:https]

# Get port
RewriteRule .* - [E=SFC_PORT:80]
RewriteCond %{ENV:SFC_PROTOCOL} ^https$ [NC]
RewriteRule .* - [E=SFC_PORT:443]
RewriteCond %{SERVER_PORT} ^[0-9]+$
RewriteRule .* - [E=SFC_PORT:%{SERVER_PORT}]
RewriteCond %{HTTP:X-Forwarded-Port} ^[0-9]+$
RewriteRule .* - [E=SFC_PORT:%{HTTP:X-Forwarded-Port}]

# Full path for redirect
RewriteRule .* - [E=SFC_FULLPATH:typo3temp/tx_staticfilecache/%{ENV:SFC_PROTOCOL}_%{ENV:SFC_HOST}_%{ENV:SFC_PORT}%{ENV:SFC_URI}/index]

# Extension (Order: br, gzip, default)
RewriteRule .* - [E=SFC_EXT:]
RewriteCond %{HTTP:Accept-Encoding} br [NC]
RewriteRule .* - [E=SFC_EXT:.br]
RewriteCond %{ENV:SFC_ROOT}/%{ENV:SFC_FULLPATH}%{ENV:SFC_EXT} !-f
RewriteRule .* - [E=SFC_EXT:]
RewriteCond %{ENV:SFC_EXT} ^$
RewriteCond %{HTTP:Accept-Encoding} gzip [NC]
RewriteRule .* - [E=SFC_EXT:.gz]
RewriteCond %{ENV:SFC_EXT} ^\.gz$
RewriteCond %{ENV:SFC_ROOT}/%{ENV:SFC_FULLPATH}%{ENV:SFC_EXT} !-f
RewriteRule .* - [E=SFC_EXT:]

# Write Extension to SFC_FULLPATH
RewriteRule .* - [E=SFC_FULLPATH:%{ENV:SFC_FULLPATH}%{ENV:SFC_EXT}]

### Begin: StaticFileCache (main) ####

# We only redirect URI's without query strings
RewriteCond %{QUERY_STRING} ^$

# It only makes sense to do the other checks if a static file actually exists.
RewriteCond %{ENV:SFC_ROOT}/%{ENV:SFC_FULLPATH} -f

# NO frontend or backend user is logged in. Logged in users may see different
# information than anonymous users. But the anonymous version is cached. So
# don't show the anonymous version to logged in users.
RewriteCond %{HTTP_COOKIE} !staticfilecache [NC]

# We only redirect GET requests
RewriteCond %{REQUEST_METHOD} GET

# Rewrite the request to the static file.
RewriteRule .* %{ENV:SFC_ROOT}/%{ENV:SFC_FULLPATH} [L]

# Do not allow direct call the cache entries
RewriteCond %{ENV:SFC_URI} ^/typo3temp/tx_staticfilecache/.*
RewriteCond %{ENV:REDIRECT_STATUS} ^$
RewriteRule .* - [F,L]

# Handle application cache
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-l
RewriteRule ^.*\.sfc$ %{ENV:CWD}index.php?eID=sfc_manifest [QSA,L]

### Begin: StaticFileCache (options) ####

# Set proper content type and encoding for gzipped html.
<FilesMatch "\.gzip$">
   SetEnv no-gzip 1
   SetEnv no-brotli 1
   <IfModule mod_headers.c>
      Header set Content-Encoding gzip
   </IfModule>
</FilesMatch>
<FilesMatch "\.gz$">
   SetEnv no-gzip 1
   SetEnv no-brotli 1
   <IfModule mod_headers.c>
      Header set Content-Encoding gzip
   </IfModule>
</FilesMatch>
<FilesMatch "\.br$">
   SetEnv no-gzip 1
   SetEnv no-brotli 1
   <IfModule mod_headers.c>
      Header set Content-Encoding br
   </IfModule>
</FilesMatch>

# if there are same problems with ForceType, please try the AddType alternative
# Set proper content type gzipped html
<FilesMatch "\.gzip$">
   ForceType text/html
   # AddType "text/html" .gzip
</FilesMatch>
<FilesMatch "\.js\.gzip$">
   ForceType text/javascript
   # AddType "text/javascript" .gzip
</FilesMatch>
<FilesMatch "\.css\.gzip$">
   ForceType text/css
   # AddType "text/css" .gzip
</FilesMatch>
<FilesMatch "\.xml\.gzip$">
   ForceType text/xml
   # AddType "text/xml" .gzip
</FilesMatch>
<FilesMatch "\.rss\.gzip$">
   ForceType text/xml
   # AddType "text/xml" .gzip
</FilesMatch>
<FilesMatch "\.gz$">
   ForceType text/html
   # AddType "text/html" .gz
</FilesMatch>
<FilesMatch "\.xml\.gz$">
   ForceType text/xml
   # AddType "text/xml" .gz
</FilesMatch>
<FilesMatch "\.rss\.gz$">
   ForceType text/xml
   # AddType "text/xml" .gz
</FilesMatch>
<FilesMatch "\.br$">
   ForceType text/html
   # AddType "text/html" .br
</FilesMatch>
<FilesMatch "\.xml\.br$">
   ForceType text/xml
   # AddType "text/xml" .br
</FilesMatch>
<FilesMatch "\.rss\.br$">
   ForceType text/xml
   # AddType "text/xml" .br
</FilesMatch>

# Avoid .br files being delivered with Content-Language: br headers
<IfModule mod_mime.c>
   RemoveLanguage .br
</IfModule>

### End: StaticFileCache ###
# ---------------------------------END------------------------------------------------------



# ------------------------------------------------------------------------------------------
# Desc : Allow yoast without basic auth
# Allow if UA is TYPO3 and Yoast-Page-Request header is present
# ------------------------------------------------------------------------------------------

# First set is_yoast variable to 0 unconditionally
#SetEnvIf Remote_Addr ^ is_yoast=0

# Set another variable if yoast header is present
#SetEnvIf X-Yoast-Page-Request .* has_yoast_header=1

# If UA is TYPO3, set is_yoast to 1
#BrowserMatch TYPO3 is_yoast

# But if no yoast header is present, unset is_yoast
#SetEnvIf has_yoast_header 0 !is_yoast
#SetEnvIf is_yoast 1 YOAST_DETECTED=1

# Allow if is_yoast
#Allow from env=YOAST_DETECTED
# --------------------------------------END--------------------------------------------------



# ------------------------------------------------------------------------------------------
# Desc : TYPO3 Main Ruleset START
# ------------------------------------------------------------------------------------------

# Prevent serving TYPO3 404 pages for missing files
RewriteRule ^(typo3|typo3(conf|temp)?|fileadmin|uploads|t3lib|tslib|clear.gif|index.php|favicon.ico|showpic\.php) - [L,DPI]

# Do not rewrite static resources
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d [OR]
RewriteCond %{REQUEST_FILENAME} -l
RewriteRule .* - [L,DPI]

# Rewrite the rest to index.php
RewriteRule .* index.php [L,DPI]

# -----------------------------------END------------------------------------------------------



# ------------------------------------------------------------------------------------------
# Desc : CSP START
# ------------------------------------------------------------------------------------------

<IfModule mod_headers.c>
	Header set Content-Security-Policy "default-src 'self'; script-src 'none'; style-src 'unsafe-inline'; object-src 'self';"
</IfModule>
# -----------------------------------END------------------------------------------------------

